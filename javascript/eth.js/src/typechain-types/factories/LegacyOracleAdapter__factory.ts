/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  LegacyOracleAdapter,
  LegacyOracleAdapterInterface,
} from "../LegacyOracleAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_switchboard",
        type: "address",
      },
      {
        internalType: "address",
        name: "_aggregatorAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "aggregatorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "round",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    name: "roundResults",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "resultTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "_result",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_resultTimestamp",
        type: "uint256",
      },
    ],
    name: "setRoundData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "switchboard",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161087a38038061087a83398101604081905261002f916100a6565b600180546001600160a01b038086166001600160a01b0319928316179092556002805492851692909116919091179055600061006b8282610219565b505050506102d8565b80516001600160a01b038116811461008b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156100bb57600080fd5b6100c484610074565b925060206100d3818601610074565b60408601519093506001600160401b03808211156100f057600080fd5b818701915087601f83011261010457600080fd5b81518181111561011657610116610090565b604051601f8201601f19908116603f0116810190838211818310171561013e5761013e610090565b816040528281528a8684870101111561015657600080fd5b600093505b82841015610178578484018601518185018701529285019261015b565b60008684830101528096505050505050509250925092565b600181811c908216806101a457607f821691505b6020821081036101c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561021457600081815260208120601f850160051c810160208610156101f15750805b601f850160051c820191505b81811015610210578281556001016101fd565b5050505b505050565b81516001600160401b0381111561023257610232610090565b610246816102408454610190565b846101ca565b602080601f83116001811461027b57600084156102635750858301515b600019600386901b1c1916600185901b178555610210565b600085815260208120601f198616915b828110156102aa5788860151825594840194600190910190840161028b565b50858210156102c85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610593806102e76000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806354fd4d501161006657806354fd4d501461019d5780637284e416146101b35780639a6fc8f5146101c8578063f64bb1bb14610260578063feaf968c1461027557600080fd5b8063146ca531146100a357806318ccf099146100da578063313ce56714610105578063380bbe531461011f5780634967923f14610132575b600080fd5b6002546100bd90600160a01b90046001600160501b031681565b6040516001600160501b0390911681526020015b60405180910390f35b6001546100ed906001600160a01b031681565b6040516001600160a01b0390911681526020016100d1565b61010d601281565b60405160ff90911681526020016100d1565b6002546100ed906001600160a01b031681565b61017361014036600461047a565b600360208190526000918252604090912080546001820154600283015492909301546001600160501b0390911692919084565b604080516001600160501b03909516855260208501939093529183015260608201526080016100d1565b6101a5600181565b6040519081526020016100d1565b6101bb6102d5565b6040516100d1919061049c565b61022c6101d636600461047a565b6001600160501b0390811660009081526003602081815260409283902083516080810185528154909516808652600182015492860183905260028201549486018590529201546060909401939093529281908490565b604080516001600160501b03968716815260208101959095528401929092526060830152909116608082015260a0016100d1565b61027361026e3660046104ea565b610363565b005b600280546001600160501b03600160a01b909104811660008181526003602081815260409283902083516080810185528154909616865260018101549186018290529586015492850183905294015460609093018390529092918361022c565b600080546102e290610523565b80601f016020809104026020016040519081016040528092919081815260200182805461030e90610523565b801561035b5780601f106103305761010080835404028352916020019161035b565b820191906000526020600020905b81548152906001019060200180831161033e57829003601f168201915b505050505081565b6001546001600160a01b031633146103d15760405162461bcd60e51b815260206004820152602760248201527f6f6e6c7920737769746368626f6172642063616e2063616c6c207468697320666044820152663ab731ba34b7b760c91b606482015260840160405180910390fd5b6002805469ffffffffffffffffffff60a01b1916600160a01b6001600160501b03968716908102919091178255604080516080810182528281526020808201978852818301968752606082019586526000938452600390819052919092209151825469ffffffffffffffffffff191697169690961781559351600185015591519183019190915551910155565b80356001600160501b038116811461047557600080fd5b919050565b60006020828403121561048c57600080fd5b6104958261045e565b9392505050565b600060208083528351808285015260005b818110156104c9578581018301518582016040015282016104ad565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806000806080858703121561050057600080fd5b6105098561045e565b966020860135965060408601359560600135945092505050565b600181811c9082168061053757607f821691505b60208210810361055757634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220942809f9494cb06b23993ea965612404cfc0e820029d210854d9976aee382fda64736f6c63430008110033";

type LegacyOracleAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LegacyOracleAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LegacyOracleAdapter__factory extends ContractFactory {
  constructor(...args: LegacyOracleAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _switchboard: PromiseOrValue<string>,
    _aggregatorAddress: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LegacyOracleAdapter> {
    return super.deploy(
      _switchboard,
      _aggregatorAddress,
      _description,
      overrides || {}
    ) as Promise<LegacyOracleAdapter>;
  }
  override getDeployTransaction(
    _switchboard: PromiseOrValue<string>,
    _aggregatorAddress: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _switchboard,
      _aggregatorAddress,
      _description,
      overrides || {}
    );
  }
  override attach(address: string): LegacyOracleAdapter {
    return super.attach(address) as LegacyOracleAdapter;
  }
  override connect(signer: Signer): LegacyOracleAdapter__factory {
    return super.connect(signer) as LegacyOracleAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LegacyOracleAdapterInterface {
    return new utils.Interface(_abi) as LegacyOracleAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LegacyOracleAdapter {
    return new Contract(address, _abi, signerOrProvider) as LegacyOracleAdapter;
  }
}
