/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Permissions,
  PermissionsInterface,
} from "../../../../../contracts/src/Switchboard/contracts/Permissions";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum Permissions.Permission",
        name: "p",
        type: "uint8",
      },
    ],
    name: "getPermissionCode",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "granter",
        type: "address",
      },
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
    ],
    name: "hasPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permissions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101fa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631f9838b5146100465780638b01813d14610081578063a572dc74146100cd575b600080fd5b61006e610054366004610117565b600060208181529281526040808220909352908152205481565b6040519081526020015b60405180910390f35b6100bd61008f36600461014a565b6001600160a01b03928316600090815260208181526040808320949095168252929092529190205416151590565b6040519015158152602001610078565b61006e6100db366004610186565b6000808260028111156100f0576100f06101ae565b6001901b9392505050565b80356001600160a01b038116811461011257600080fd5b919050565b6000806040838503121561012a57600080fd5b610133836100fb565b9150610141602084016100fb565b90509250929050565b60008060006060848603121561015f57600080fd5b610168846100fb565b9250610176602085016100fb565b9150604084013590509250925092565b60006020828403121561019857600080fd5b8135600381106101a757600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212205dd55a855e2a25cae56c2e9201fc5a216a3fbd419e607fb9a60ccbf95832f9d164736f6c63430008110033";

type PermissionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PermissionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Permissions__factory extends ContractFactory {
  constructor(...args: PermissionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Permissions> {
    return super.deploy(overrides || {}) as Promise<Permissions>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Permissions {
    return super.attach(address) as Permissions;
  }
  override connect(signer: Signer): Permissions__factory {
    return super.connect(signer) as Permissions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PermissionsInterface {
    return new utils.Interface(_abi) as PermissionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Permissions {
    return new Contract(address, _abi, signerOrProvider) as Permissions;
  }
}
