/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "Permissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Permissions__factory>;
    getContractFactory(
      name: "IAttestationServiceEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAttestationServiceEvents__factory>;
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "ISwitchboard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwitchboard__factory>;
    getContractFactory(
      name: "ISwitchboardAttestationService",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwitchboardAttestationService__factory>;
    getContractFactory(
      name: "CoreLegacyOracleAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoreLegacyOracleAdapter__factory>;
    getContractFactory(
      name: "AttestationServiceErrorLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AttestationServiceErrorLib__factory>;
    getContractFactory(
      name: "ErrorLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ErrorLib__factory>;
    getContractFactory(
      name: "CoreSwitchboard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoreSwitchboard__factory>;
    getContractFactory(
      name: "CoreSwitchboardAttestationService",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoreSwitchboardAttestationService__factory>;
    getContractFactory(
      name: "CoreSwitchboardV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoreSwitchboardV3__factory>;
    getContractFactory(
      name: "LegacyOracleAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LegacyOracleAdapter__factory>;
    getContractFactory(
      name: "Permissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Permissions__factory>;
    getContractFactory(
      name: "IAttestationServiceEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAttestationServiceEvents__factory>;
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "ISwitchboard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwitchboard__factory>;
    getContractFactory(
      name: "ISwitchboardAttestationService",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwitchboardAttestationService__factory>;
    getContractFactory(
      name: "ISwitchboardEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwitchboardEvents__factory>;
    getContractFactory(
      name: "AttestationServiceErrorLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AttestationServiceErrorLib__factory>;
    getContractFactory(
      name: "ErrorLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ErrorLib__factory>;
    getContractFactory(
      name: "Switchboard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Switchboard__factory>;
    getContractFactory(
      name: "SwitchboardAttestationService",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SwitchboardAttestationService__factory>;
    getContractFactory(
      name: "SwitchboardV2TEST",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SwitchboardV2TEST__factory>;

    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "Permissions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Permissions>;
    getContractAt(
      name: "IAttestationServiceEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAttestationServiceEvents>;
    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "ISwitchboard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwitchboard>;
    getContractAt(
      name: "ISwitchboardAttestationService",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwitchboardAttestationService>;
    getContractAt(
      name: "CoreLegacyOracleAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoreLegacyOracleAdapter>;
    getContractAt(
      name: "AttestationServiceErrorLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AttestationServiceErrorLib>;
    getContractAt(
      name: "ErrorLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ErrorLib>;
    getContractAt(
      name: "CoreSwitchboard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoreSwitchboard>;
    getContractAt(
      name: "CoreSwitchboardAttestationService",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoreSwitchboardAttestationService>;
    getContractAt(
      name: "CoreSwitchboardV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoreSwitchboardV3>;
    getContractAt(
      name: "LegacyOracleAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LegacyOracleAdapter>;
    getContractAt(
      name: "Permissions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Permissions>;
    getContractAt(
      name: "IAttestationServiceEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAttestationServiceEvents>;
    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "ISwitchboard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwitchboard>;
    getContractAt(
      name: "ISwitchboardAttestationService",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwitchboardAttestationService>;
    getContractAt(
      name: "ISwitchboardEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwitchboardEvents>;
    getContractAt(
      name: "AttestationServiceErrorLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AttestationServiceErrorLib>;
    getContractAt(
      name: "ErrorLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ErrorLib>;
    getContractAt(
      name: "Switchboard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Switchboard>;
    getContractAt(
      name: "SwitchboardAttestationService",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SwitchboardAttestationService>;
    getContractAt(
      name: "SwitchboardV2TEST",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SwitchboardV2TEST>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
